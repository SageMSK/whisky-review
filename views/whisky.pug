extends layout

include mixins/_commentForm
include mixins/_comment

block content
  .review
    .review__header
      a.back-to-index(href="/whiskies") Back to Whiskies
      p.review__title #{review.name}
        span.review__bottle-details (#{review.abv}% / #{review.amount}ml)

        //- This is needed because if user's account is deleted
        //- it will throw an error: can't find username of null
        //- so find the user first
        if user
          //- check if the user logged in matches the review's author
          - const author = review.author ? review.author.equals(user._id) : false
          if author
            a.button.review__button(href=`/whisky/${review._id}/edit`)
              i.fa.fa-pencil-square-o(aria-hidden='true')
            a.button.review__button.delete(href=`/whisky/${review._id}/delete`)
              i.fa.fa-trash-o(aria-hidden='true')
      
        - const author = review.author ? review.author.username : 'unknown'
        p.review__author By #{author} at 
          span.review__date #{h.moment(review.created).format("MMMM Mo YYYY, h:mm a")} PT
    
    .review__image-aside
      img(src=`/uploads/${review.photo || ''}`, alt=`${review.name}`, title=`${review.name}`)

    .review__info-section
      p.review__rating
        strong Rate: 
        | #{review.rating} / 10

      .review__description
        p.review__description--title
          strong #{review.name} Notes:
        p.review__description-notes #{review.description}

      .review__details
        p.review__details--title
          strong Tasting Notes 

        p.review__details--msg
          strong Nose: 
          | #{review.nose}
        p.review__details--msg
          strong Palate
          | : #{review.palate}
        p.review__details--msg
          strong Finish
          | : #{review.finish}

      //- Toggling favorites
      if user
        .review__favorite
          p Favorite Review:
          form.review__favoriteForm(method="POST" action=`/whisky/${review._id}/favorite`)
            //- Turn the objId into strings.
            - var favoriteStrings = user.favorites.map(objId => objId.toString());
            //- Check if user has this review in their favorites list/array
            //- If so, add the class favorited
            - var favoriteClass = favoriteStrings.includes(review._id.toString()) ? 'favorite-button--favorited' : '';
            button.favorite-button(type="submit" name="favorite" title="Favorite Review" class=favoriteClass)
              i.fa.fa-heart(aria-hidden='true')

    .review__comment-section
      h2 Share your thoughts here
      if user
        +commentForm(review)

      if review.comments
        .review__comments
          each comment in review.comments
            .review__comment
              +commentBox(comment)